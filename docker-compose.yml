name: "headscale-proxied"
services:
  headscale:
    image: headscale/headscale:0.25.1
    restart: unless-stopped
    container_name: headscale
    ports:
      #- "0.0.0.0:8080:8080"
      - "127.0.0.1:9090:9090"
    environment:
      - TZ=Europe/Paris
    volumes:
      - ./headscale:/etc/headscale:ro
      - headscale_data:/var/lib/headscale:rw
    command: serve
    networks:
      - caddy_nw

  headscale-admin:
    image: goodieshq/headscale-admin:0.24
    container_name: headscale-admin
    restart: unless-stopped
    networks:
      - caddy_nw

  caddy:
    image: caddy
    container_name: caddy
    restart: unless-stopped
    ports: 
      - "80:80"
      - "443:443"
    networks:
      - caddy_nw
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  authelia:
    image: authelia/authelia
    container_name: authelia
    volumes:
      - ./authelia:/config
      - ./secrets:/config/secrets
    restart: unless-stopped
    healthcheck:
      ## In production the healthcheck section should be commented.
      disable: true
    depends_on:
      - database
      - redis
    environment:
      TZ: Europe/Paris
      AUTHELIA_JWT_SECRET_FILE: /config/secrets/JWT_SECRET
      AUTHELIA_SESSION_SECRET_FILE: /config/secrets/SESSION_SECRET
      AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE: /config/secrets/SMTP_PASSWORD
      AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE: /config/secrets/STORAGE_ENCRYPTION_KEY
      AUTHELIA_STORAGE_POSTGRES_PASSWORD_FILE: /config/secrets/STORAGE_PASSWORD
      AUTHELIA_SESSION_REDIS_PASSWORD_FILE: /config/secrets/REDIS_PASSWORD

  redis:
    image: redis:alpine
    container_name: redis
    volumes:
      - redis_data:/data
    restart: unless-stopped
    environment:
      TZ: Europe/Paris
    command: redis-server --save 60 1 --loglevel warning --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    env_file:
      - secrets/.env

  database:
    image: postgres:15
    container_name: database
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "authelia"
      # POSTGRES_PASSWORD: "[snip]"
    env_file:
      - secrets/.env

volumes:
  caddy_data:
  caddy_config:
  headscale_data:
  redis_data:
  postgres_data:

networks:
  caddy_nw:
    # internal: true
  net:
    driver: 'bridge'

...